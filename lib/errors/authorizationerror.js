// Generated by CoffeeScript 1.9.3
var AuthorizationError, OAuth2Error, util;

util = require('util');


/**
 * Module dependencies.
 */

OAuth2Error = require('./oauth2error');


/**
 * Inherit from `OAuth2Error`.
 */


/**
 * `AuthorizationError` error.
 *
 * @api public
 */

AuthorizationError = function(message, code, uri, status) {
  if (!status) {
    switch (code) {
      case 'invalid_request':
        status = 400;
        break;
      case 'invalid_client':
        status = 401;
        break;
      case 'unauthorized_client':
        status = 403;
        break;
      case 'access_denied':
        status = 403;
        break;
      case 'unsupported_response_type':
        status = 400;
        break;
      case 'invalid_scope':
        status = 400;
        break;
      case 'temporarily_unavailable':
        status = 503;
    }
  }
  OAuth2Error.call(this, message, code, uri, status);
  Error.captureStackTrace(this, arguments.callee);
  this.name = 'AuthorizationError';
};

util.inherits(AuthorizationError, OAuth2Error);


/**
 * Expose `AuthorizationError`.
 */

module.exports = AuthorizationError;
